"use strict";angular.module("dcm-ui.multiple-input",[]),angular.module("dcm-ui.multiple-input").directive("multipleInput",[function(){return{restrict:"E",template:'<div class="list-group" ng-show="!!items"><div class="list-group-item" ng-repeat="item in items">{{item}}<button class="btn btn-xs btn-danger pull-right" ng-click="removeEntry($index)"><i class="fa fa-times"></i></button></div></div><div class="input-group" ng-form="testForm" ng-class="{\'has-error\': testForm.newItem.$invalid}"><input ng-keypress="catchEnter($event)" class="form-control" name="newItem" type="{{type}}" placeholder="{{placeholder}}" ng-minlength="{{ngMinlength}}" ng-maxlength="{{ngMaxlength}}" ng-pattern="ngPattern" ng-model="ngModel"><span class="input-group-btn"><button class="btn btn-primary" type="button"ng-disabled="!ngModel" ng-click="addEntry()"><i ng-if="addButtonIcon" class="{{addButtonIcon}}"></i> {{addButtonLabel}}</button></span></div>',replace:!1,scope:{items:"=",type:"@",placeholder:"@",ngPattern:"=?",ngModel:"=?",ngMinlength:"@",ngMaxlength:"@",addButtonLabel:"@",addButtonIcon:"@"},compile:function(a,b){var c=a.find("input.form-control");return b.type||b.$set("type","text"),b.hasOwnProperty("addButtonLabel")||b.$set("addButtonLabel","Add Item"),angular.forEach(["ngPattern","ngMinlength","ngMaxlength","placeholder"],function(a){b.hasOwnProperty(a)||c.removeAttr(a.replace(/([A-Z])/g,"-$1").toLowerCase())}),function(a){a.data={},angular.isArray(a.items)||(a.items=[]),a.addEntry=function(){a.ngModel&&-1===a.items.indexOf(a.ngModel)&&(a.items.push(a.ngModel),a.ngModel="")},a.removeEntry=function(b){a.items.splice(b,1)},a.catchEnter=function(b){13===b.which&&(a.addEntry(),b.preventDefault())}}}}}]);
//# sourceMappingURL=dcm-ui-multiple-input.min.js.map